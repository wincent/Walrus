# Copyright 2007 Wincent Colaiuta
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# in the accompanying file, "LICENSE.txt", for more details.
#
# $Id: echo_directive.rb 165 2007-04-09 14:55:55Z wincent $

require 'walrus/parser.rb' # make sure that RawText class has been defined prior to extending it

module Walrus
  class WalrusGrammar
    
    class EchoDirective
      
      def compile(options = {})
        
        if @expression.respond_to? :each
          expression = @expression
        else
          expression = [@expression]
        end
        
        # TODO: potentially include line, col and file name info in the comments generated by the compiler
        
        compiled  = ''
        first     = true
        expression.each do |expr|
          if first
            compiled << "accumulate(instance_eval { %s }) # Echo directive\n" % expr.compile
            first = false
          else
            compiled << "accumulate(instance_eval { %s }) # Echo directive (continued)\n" % expr.compile
          end
        end
        compiled
        
      end
      
    end # class EchoDirective
    
  end # class WalrusGrammar
end # Walrus

