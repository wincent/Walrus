# Copyright 2007-2010 Wincent Colaiuta. All rights reserved.
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

require 'walrus/grammar'

module Walrus
  class Grammar
    # "#silent is the opposite of #echo. It executes an expression but
    # discards the output."
    # http://www.cheetahtemplate.org/docs/users_guide_html_multipage/output.silent.html
    #
    # Like the #echo directive, a convienient shorthand syntax is available:
    #
    #   # expression(s) #
    #
    # Equivalent to the long form:
    #
    #   #silent expression(s) #
    #
    # And similar to but more concise than the ERB syntax:
    #
    #   <% expression(s) %>
    #
    # Note that the space between the opening hash character and the
    # expression(s) is required in order for Walrus to distinguish the
    # shorthand for the #silent directive from the other directives. That is,
    # the following is not legal:
    #
    #   #expression(s) #
    #
    class SilentDirective < Directive
      def compile options = {}
        if @expression.respond_to? :each
          expression = @expression
        else
          expression = [@expression]
        end

        # TODO: potentially include line, col and file name info in the comments generated by the compiler

        compiled  = ''
        expression.each_with_index do |expr, idx|
          compiled << "instance_eval { #{expr.compile} } # Silent directive"
          compiled << (idx == 0 ? "\n" : " (continued)\n")
        end
        compiled
      end
    end # class SilentDirective
  end # class Grammar
end # Walrus
