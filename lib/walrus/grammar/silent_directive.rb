# Copyright 2007-2014 Greg Hurrell. All rights reserved.
# Licensed under the terms of the BSD 2-clause license.

require 'walrus/grammar'

module Walrus
  class Grammar
    # "#silent is the opposite of #echo. It executes an expression but
    # discards the output."
    # http://www.cheetahtemplate.org/docs/users_guide_html_multipage/output.silent.html
    #
    # Like the #echo directive, a convienient shorthand syntax is available:
    #
    #   # expression(s) #
    #
    # Equivalent to the long form:
    #
    #   #silent expression(s) #
    #
    # And similar to but more concise than the ERB syntax:
    #
    #   <% expression(s) %>
    #
    # Note that the space between the opening hash character and the
    # expression(s) is required in order for Walrus to distinguish the
    # shorthand for the #silent directive from the other directives. That is,
    # the following is not legal:
    #
    #   #expression(s) #
    #
    class SilentDirective < Directive
      def compile options = {}
        if @expression.respond_to? :each
          expression = @expression
        else
          expression = [@expression]
        end

        # TODO: potentially include line, col and file name info in the comments generated by the compiler

        compiled  = ''
        expression.each_with_index do |expr, idx|
          compiled << "instance_eval { #{expr.compile} } # Silent directive"
          compiled << (idx == 0 ? "\n" : " (continued)\n")
        end
        compiled
      end
    end # class SilentDirective
  end # class Grammar
end # Walrus
