This is a test ## very similar to the "comments-and-text.tmpl" test
in which comments will be intermingled with directives...

## Basically, if a comment begins in the first column it produces no output at all.
## It doesn't even produce an empty line.
## The end-of-line marker after the whole-line comment is discarded.
## One way for comments to "know" whether they are preceeded by a newline or not is for the compiler to figure it out for them.
## The other way would be for them to somehow "know" what column number they start with; that would require the parser to tell them

Here's an example. This line should be immediately followed by another line.
## (because the comment on this line occupies the entire line)
Here is the other line.

But in this example, there should be a line containing only a space after this one.
 ## this comment will be thrown out but the rest of the line will survive...
Note the line above which contains only a space.

We can do the same kind of demonstration with directives...
(and placeholders, but that will be a task for another test file)

Basically if a directive produces no output...
any comment that follows it...
will be treated as if it occupied the whole line...
That means the trailing end-of-line will get thrown out as well...

Example: the next line contains a directive that produces no output...
#set foo = true ### my comment is, "this line sets foo to true"
That line should have been gobbled up in the final output.
## I am not sure how Walrus should determine whether a directive produces output or not.
## Can it know this at compile time? Or only at runtime?
## Should it try to guess based on directive type? (eg. #set, #silent, #def etc do not produce output)
## (#echo would be presumed to produce output, any $placeholder as well)